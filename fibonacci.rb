# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.
 
# Here is a good example of something that is cool about Ruby. The times method
# works just like it sounds, it will do something n times. As in Perl and Python,
# we don't need a temp variable here to swap the values for a and b.

a = 1
b = 1
stop = 4000000
all_nums = []
while a && b < stop
  puts a
  a,b = b, a+b
  all_nums << b
end
sum = 0 
all_nums.each { |x| sum += x if x.even?}
puts sum



 
